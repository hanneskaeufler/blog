version: 2
jobs:
  test:
    docker:
      - image: hanneskaeufler/crystal-node-ruby:latest
        environment:
          DATABASE_URL: postgres://blog_test_user@127.0.0.1/blog_test
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: blog_test
          POSTGRES_USER: blog_test_user
    steps:
      - checkout
      - run:
          name: "Install greenkeeper-lockfile-update and run it"
          command: npm i -g greenkeeper-lockfile && greenkeeper-lockfile-update
      - run:
          name: "Install node dependencies"
          command: npm ci
      - run:
          name: "Audit node dependenceis for security vulnerabilities"
          command: npm audit
      - run:
          name: "Stylelint"
          command: npm run lint
      - run:
          name: "Compiling assets"
          command: npm run prod
      - run:
          name: "Install crystal dependencies"
          command: shards install
      - run:
          name: "Check formatting"
          command: crystal tool format src spec --check
      - run:
          name: "Static analysis"
          command: ./bin/ameba
      - run:
          name: "Migrate database"
          command: LUCKY_ENV=test crystal tasks.cr -- db.migrate
      - run:
          name: "Running specs"
          command: crystal spec --junit_output=/root/reports
      - store_test_results:
          path: /root/reports
          when: always
      - run:
          name: "Run danger"
          command: npm run danger-ci
          when: always
  test-coverage:
    docker:
      - image: hanneskaeufler/crystal-node-ruby:latest
        environment:
          DATABASE_URL: postgres://blog_test_user@127.0.0.1/blog_test
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: blog_test
          POSTGRES_USER: blog_test_user
    steps:
      - checkout
      - run:
          name: "Install node dependencies"
          command: npm ci
      - run:
          name: "Compiling assets"
          command: npm run prod
      - run:
          name: "Install crystal dependencies"
          command: shards install
      - run:
          name: "Migrate database"
          command: LUCKY_ENV=test crystal tasks.cr -- db.migrate
      - run:
          name: "Running specs"
          command: ./script/test-coverage
  test-visual:
    docker:
      - image: hanneskaeufler/crystal-node-ruby:0.27.0
        environment:
          DATABASE_URL: postgres://blog_test_user@127.0.0.1/blog_test
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: blog_test
          POSTGRES_USER: blog_test_user
    steps:
      - checkout
      - run:
          name: "Install node dependencies"
          command: npm ci
      - run:
          name: "Compiling assets"
          command: npm run prod
      - run:
          name: "Install crystal dependencies"
          command: shards install
      - run:
          name: "Compile blog for visual testing"
          command: DATABASE_URL=postgres://blog_test_user@127.0.0.1/blog_visual_test crystal build ./src/blog.cr --release -o app
      - run:
          name: "Create database for visual testing"
          command: createdb -U postgres -h 127.0.0.1 -p 5432 blog_visual_test
      - run:
          name: "Migrate database for visual testing"
          command: DATABASE_URL=postgres://blog_test_user@127.0.0.1/blog_visual_test crystal tasks.cr -- db.migrate
      - run:
          name: "Restore database content for visual testing"
          command: psql -U postgres -h 127.0.0.1 -p 5432 blog_visual_test < blog_visual_test.dump
      - run:
          name: "Run webserver for visual testing"
          command: DATABASE_URL=postgres://blog_test_user@127.0.0.1/blog_visual_test ./app
          background: true
      - run:
          name: "Run BackstopJS - visual tests"
          command: npm test
      - store_artifacts:
          path: /root/project/backstop_data/bitmaps_test
      - run:
          name: "Accessibility testing"
          command: npm run accessibility-test
  test-mutations:
    docker:
      - image: hanneskaeufler/crystal-node-ruby:latest
        environment:
          DATABASE_URL: postgres://blog_test_user@127.0.0.1/blog_test
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: blog_test
          POSTGRES_USER: blog_test_user
    steps:
      - checkout
      - run:
          name: "Install node dependencies"
          command: npm ci
      - run:
          name: "Compiling assets"
          command: npm run prod
      - run:
          name: "Install crystal dependencies"
          command: shards install
      - run:
          name: "Migrate database"
          command: LUCKY_ENV=test crystal tasks.cr -- db.migrate
      - run:
          name: "Check mutation test coverage"
          command: ./bin/crytic --min-msi 50.0
  deploy:
    docker:
      - image: hanneskaeufler/crystal-node-ruby:latest
    steps:
      - checkout
      - run:
          name: Run setup script
          command: bash .circleci/setup-heroku.sh
      - run:
          name: Deploy Master to Heroku
          command: |
            git push git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master

workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - test-visual
      - test-coverage
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
    jobs:
      - test
      - test-visual
      - test-mutations
      - test-coverage
